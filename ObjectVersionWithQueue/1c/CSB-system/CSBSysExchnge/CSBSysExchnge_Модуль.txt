

Функция СрокХраненияВсекундах(Ном) Экспорт
	
	СвойствоСрокХранения = ПланыВидовХарактеристик.СвойстваОбъектов.НайтиПоНаименованию("Срок хранения");
	//НастройкиПроизводства_ПС	= 
	//	ВС_Производство_ОбщегоНазначения.ПолучитьПараметрыНастройкиПроизводстваОрганизации(Организация, ТекущаяДата(), "Фасовка");
		
	//Если НЕ НастройкиПроизводства_ПС = Неопределено Тогда
	//	СвойствоСрокХранения= НастройкиПроизводства_ПС["Фасовка_СвойствоСрокХранения"];
	//КонецЕсли;

	Запись = РегистрыСведений.ЗначенияСвойствОбъектов.СоздатьМенеджерЗаписи();
	Запись.Свойство = СвойствоСрокХранения;//ПланыВидовХарактеристик.СвойстваОбъектов.НайтиПоКоду("00000000011");
	Запись.Объект = Ном;
	Запись.Прочитать();
	Если Запись.Выбран() Тогда
		
		//ил++
		Результат = "";
		Для Сч = 1 По СтрДлина(Запись.Значение) Цикл
			
			Если НЕ Найти("0123456789", Сред(Запись.Значение, Сч, 1)) = 0 Тогда
			
				Результат = Результат + Сред(Запись.Значение, Сч, 1);
				
			Иначе
				Прервать;
			КонецЕсли;
			
		КонецЦикла;
		
		Попытка
			Результат = Число(?(ПустаяСтрока(Результат), "0", Результат));
		Исключение
			Сообщить(ОписаниеОшибки());
			Возврат 0;
		КонецПопытки;
		
		Если Найти(НРег(Запись.Значение), "ч") > 0 Тогда
			Результат = Результат / 24;
		КонецЕсли;
		
		Если Найти(НРег(Запись.Значение), "сут") > 0 Тогда
			Результат = Результат;
		КонецЕсли;
		
		//ил--
		
		Попытка
			//Возврат 24*60*60*Число(Лев(Запись.Значение, Найти(Запись.Значение, " ") - 1));
			//ил++
			Возврат 24*60*60*Результат;
			//ил--
		Исключение
			Возврат 0;
		КонецПопытки;
	Иначе
		Возврат 0;
	КонецЕсли;
	
КонецФункции

Процедура ЗаполнитьGoodsObject(Ссылка,Object,Фабрика)
	
	MeasureUnitТип = Фабрика.Тип("http://www.kolbasavs.ru/csb","MeasureUnit");
	
	Object.ID = Строка(Ссылка.УникальныйИдентификатор());
	Object.ParentID = Строка(Ссылка.Родитель.УникальныйИдентификатор());
	
	Object.DeletionMark = Ссылка.ПометкаУдаления;
	Object.IsFolder 	= Ссылка.ЭтоГруппа;
	Object.Code 		= Ссылка.Код;
	Object.Name 		= Ссылка.Наименование;
	Object.FullName 	= Ссылка.НаименованиеПолное;
	Object.ShelfLife 	= СрокХраненияВсекундах(Ссылка);
	
	suObject 			= Фабрика.Создать(MeasureUnitТип);
	suObject.ID 		= Строка(Ссылка.ЕдиницаХраненияОстатков.УникальныйИдентификатор());
	suObject.Name   	= Ссылка.ЕдиницаХраненияОстатков.Код;
	suObject.Сoefficient = Ссылка.ЕдиницаХраненияОстатков.Коэффициент;
	suObject.Weigth		= Ссылка.ЕдиницаХраненияОстатков.Вес;
	Object.StoregeUnit 	= suObject;
	
	puObject 		= Фабрика.Создать(MeasureUnitТип);
	puObject.ID 	= Строка(Ссылка.ЕдиницаДляОтчетов.УникальныйИдентификатор());
	puObject.Name   = Ссылка.ЕдиницаДляОтчетов.Код;
	puObject.Сoefficient = Ссылка.ЕдиницаДляОтчетов.Коэффициент;
	puObject.Weigth 	= Ссылка.ЕдиницаДляОтчетов.Вес;
	Object.PriceUnit 	= puObject;
	
КонецПроцедуры	

Процедура ЗаполнитьCustomerObject(Ссылка,Object,Фабрика)
	
	Object.ID = Строка(Ссылка.УникальныйИдентификатор());
	Object.DeletionMark = Ссылка.ПометкаУдаления;
	Object.Code		= Ссылка.Код;
	Object.Name		= Ссылка.Наименование;
	Object.FullName = Ссылка.НаименованиеПолное;
	Object.INN 	= СокрЛП(Ссылка.ИНН);
	Object.KPP 	= СокрЛП(Ссылка.КПП);
	
КонецПроцедуры	

Процедура ЗаполнитьOrderObject(Ссылка,Object,Фабрика)
	
	Object.ID		= Строка(Ссылка.УникальныйИдентификатор());
	Object.OrganizationID		= Строка(Ссылка.Организация.УникальныйИдентификатор());
	Object.Description		= Ссылка.Комментарий;
	Object.Number		= Ссылка.Номер;
	Object.Date		= Ссылка.Дата;
	Object.SupplierID		= Строка(Ссылка.Контрагент.УникальныйИдентификатор());
	
	GoodsLineТип = Фабрика.Тип("http://www.kolbasavs.ru/csb","GoodsLine");
	Для Каждого стр Из Ссылка.Товары Цикл
		
		GoodsLine = Фабрика.Создать(GoodsLineТип);
		GoodsLine.OwnerID = Строка(Ссылка.УникальныйИдентификатор());
		GoodsLine.NomenclatureID =  Строка(стр.Номенклатура.УникальныйИдентификатор());
		GoodsLine.StorangeUnitID =  Строка(стр.ЕдиницаИзмерения.УникальныйИдентификатор());
		GoodsLine.QuantityUnit = стр.КоличествоМест;
		GoodsLine.Quantity = стр.Количество;
		GoodsLine.TaxRate = стр.Цена;
		GoodsLine.Amount = стр.Сумма;
		Object.GoodsLine.Add(GoodsLine);
		
	КонецЦикла;	
	
КонецПроцедуры	


Процедура ЭкспортироватьОбъекты(массивОбъектов) Экспорт
	
	СохранитьМакетСXDTO();
	
	// Создать объект чтения XML по умолчанию
	ФайлыXSD = Новый Массив(); 
	ФайлыXSD.Добавить(имяФайлаXDTO); 
	НоваяФабрикаXDTO = СоздатьФабрикуXDTO(ФайлыXSD);
	
	DataItemsТип = НоваяФабрикаXDTO.Тип("http://www.kolbasavs.ru/csb","DataItems");
	GoodsТип = НоваяФабрикаXDTO.Тип("http://www.kolbasavs.ru/csb","Goods");
	CustomerТип = НоваяФабрикаXDTO.Тип("http://www.kolbasavs.ru/csb","Customer");
	OrderSupplierDocТип = НоваяФабрикаXDTO.Тип("http://www.kolbasavs.ru/csb","OrderSupplierDoc");
	
	
	Данные = НоваяФабрикаXDTO.Создать(DataItemsТип);
	Для Каждого строкаМассива Из массивОбъектов Цикл 
		
		Если ТипЗнч(строкаМассива) = Тип("СправочникСсылка.Номенклатура") Тогда
			 GoodsObject = НоваяФабрикаXDTO.Создать(GoodsТип);
			 ЗаполнитьGoodsObject(строкаМассива,GoodsObject,НоваяФабрикаXDTO);
			 Данные.Goods.Добавить(GoodsObject);
		КонецЕсли;	
		
		Если ТипЗнч(строкаМассива) = Тип("СправочникСсылка.Контрагенты") Тогда
			 CustomerObject = НоваяФабрикаXDTO.Создать(CustomerТип);
			 ЗаполнитьCustomerObject(строкаМассива,CustomerObject,НоваяФабрикаXDTO);
			 Данные.Customer.Добавить(CustomerObject);
		КонецЕсли;	
		
		Если ТипЗнч(строкаМассива) = Тип("ДокументСсылка.ЗаказПоставщику") Тогда
			 OrderObject = НоваяФабрикаXDTO.Создать(OrderSupplierDocТип);
			 ЗаполнитьOrderObject(строкаМассива,OrderObject,НоваяФабрикаXDTO);
			 Данные.OrderSupplierDoc.Добавить(OrderObject);
		КонецЕсли;	
		
	КонецЦикла;	
	
	
	ЗаписьXML = Новый ЗаписьXML;
	ЗаписьXML.ОткрытьФайл(КаталогВыгрузки+Строка(Новый УникальныйИдентификатор())+".xml", "UTF-8");
	ЗаписьXML.ЗаписатьОбъявлениеXML();
	НоваяФабрикаXDTO.ЗаписатьXML(ЗаписьXML,Данные);
	ЗаписьXML.Закрыть(); 
	
КонецПроцедуры


Процедура ИмпортироватьОбъекты(ПолноеИмяФайлаXML, массив) Экспорт
	
	//СохранитьМакетСXDTO();
	
	ЧтениеXML = Новый ЧтениеXML;
	ЧтениеXML.ОткрытьФайл(ПолноеИмяФайлаXML);
	Фабрика = ФабрикаXDTO.ПрочитатьXML(ЧтениеXML);
	ЧтениеXML.Закрыть();
	
	лмассив = Новый Массив;
	
	Попытка
		Если Число(Фабрика["PRIZNAK"]) = 1 Тогда
			ссылка = СоздатьДокументВозвратИзГовноИКСЭМЭЛ(Фабрика);
			лмассив.Добавить(ссылка);
		КонецЕсли;	
	Исключение
		Сообщить(ОписаниеОшибки());
	КонецПопытки;		
	массив = лмассив;
	
КонецПроцедуры


Функция НайтиНоменклатуруПоИд(ид)
	
	ссылкаН = Справочники.Номенклатура.ПолучитьСсылку(Новый УникальныйИдентификатор(ид));
	Если ссылкаН.ПолучитьОбъект() = Неопределено Тогда
		Возврат Справочники.Номенклатура.ПустаяСсылка();	
	КонецЕсли;	
	Возврат ссылкаН;
	
КонецФункции 

Функция НайтиКонртагентаПоИд(ид)
	
	ссылкаН = Справочники.Контрагенты.ПолучитьСсылку(Новый УникальныйИдентификатор(ид));
	Если ссылкаН.ПолучитьОбъект() = Неопределено Тогда
		Возврат Справочники.Контрагенты.ПустаяСсылка();	
	КонецЕсли;	
	Возврат ссылкаН;
	
КонецФункции 

Функция НайтиДокументВозвратПоИд(ид)
	
	ссылкаН = Документы.ВозвратТоваровПоставщику.ПолучитьСсылку(Новый УникальныйИдентификатор(ид));
	Если ссылкаН.ПолучитьОбъект() = Неопределено Тогда
		Возврат Документы.ВозвратТоваровПоставщику.ПустаяСсылка();	
	КонецЕсли;	
	Возврат ссылкаН;
	
КонецФункции 

Функция НайтиДокументЗаказПоставщикуПоИд(ид)
	
	ссылкаН = Документы.ЗаказПоставщику.ПолучитьСсылку(Новый УникальныйИдентификатор(ид));
	Если ссылкаН.ПолучитьОбъект() = Неопределено Тогда
		Возврат Документы.ЗаказПоставщику.ПустаяСсылка();	
	КонецЕсли;	
	Возврат ссылкаН;
	
КонецФункции 


Функция СоздатьДокументВозвратИзГовноИКСЭМЭЛ(Фабрика)
	
	ссылкаЗаказПоставщику = НайтиДокументЗаказПоставщикуПоИд(Фабрика.USERID);
	ссылкаКонтрагент = НайтиКонртагентаПоИд(Фабрика.AdressID);
	
	докВозврат = Документы.ВозвратТоваровПоставщику.СоздатьДокумент();
	докВозврат.Организация = Справочники.Организации.НайтиПоНаименованию("ООО ""Владимирский стандарт""");
	докВозврат.Контрагент = ссылкаКонтрагент;
	докВозврат.ДоговорКонтрагента = докВозврат.Контрагент.ОсновнойДоговорКонтрагента;
	докВозврат.ВидОперации = Перечисления.ВидыОперацийВозвратТоваровПоставщику.ПокупкаКомиссия;
	докВозврат.Дата = ТекущаяДата();
	докВозврат.УстановитьНовыйНомер("CSBЁПТЬ");
	докВозврат.ОтражатьВУправленческомУчете = Истина;
	докВозврат.ВидПередачи  = Перечисления.ВидыПередачиТоваров.СоСклада;
	
	Если ЗначениеЗаполнено(ссылкаЗаказПоставщику) Тогда
		докВозврат.Заполнить(ссылкаЗаказПоставщику);
	КонецЕсли;
	докВозврат.Товары.Очистить();
	
	строка = докВозврат.Товары.Добавить();
	строка.Номенклатура = НайтиНоменклатуруПоИд(Фабрика.Row.ItemID);
	строка.ЕдиницаИзмерения = строка.Номенклатура.ЕдиницаХраненияОстатков;
	строка.Количество = Число(Фабрика.Row.Quantity);
	строка.Цена = Число(Фабрика.Row.Price);
	
	докВозврат.Записать(РежимЗаписиДокумента.Запись);
	//Форма = докВозврат.ПолучитьФорму("ФормаДокумента");
	//Форма.Открыть();
	
	Возврат докВозврат.Ссылка;
	
КонецФункции

Процедура СохранитьМакетСXDTO()
	ВремКаталог = КаталогДокументов();
	имяФайлаXDTO = ВремКаталог + Новый УникальныйИдентификатор() + ".xsd";
	//Сообщить(Файл);
	мXDTO = ЭтотОбъект.ПолучитьМакет("XDTOPackage");
	Попытка
		мXDTO.Записать(имяФайлаXDTO);
	Исключение
		Сообщить(ОписаниеОшибки());    
	КонецПопытки;
КонецПроцедуры	


ЭтотОбъект.КаталогВыгрузки	= "d:\tmp\CSB\edi\import\";
ЭтотОбъект.КаталогЗагрузки	= "d:\tmp\CSB\edi\export\";

//КаталогВыгрузкиКонтрагентов	= "\\csb1\CSB\EDI\import\10\";//"D:\1c\CSB_System\Adress\";
//КаталогВыгрузкиНоменклатуры	= "\\csb1\CSB\EDI\import\12\";//"D:\1c\CSB_System\Artikul\";
//КаталогВыгрузкиПоступления	= "\\csb1\CSB\EDI\export\2123\";//temp\";//"\\192.168.0.81\csb\v521\vladimirskij\import\2123\";//"D:\1c\CSB_System\Priemka\";
