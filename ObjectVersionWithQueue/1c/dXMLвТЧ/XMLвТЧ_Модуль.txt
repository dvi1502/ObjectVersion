
Функция ПолучитьСсылкуПоУУИД(фПолноеИмяТипа,фУУИД)
	
	
	//CatalogRef
	//ChartOfAccountsRef
	//EnumRef
	//DocumentRef
	
	
	Попытка 
		//ПолноеИмя = СтрЗаменить(СтрЗаменить(СтрЗаменить(СтрЗаменить(фПолноеИмяТипа,"CatalogRef","Справочник"),"DocumentRef","Документ"),"EnumRef","Перечисление"),"ChartOfAccountsRef","ПланСчетов");
		//ОбъектМетаданных = Метаданные.НайтиПоПолномуИмени(ПолноеИмя);	
		
		//Если Метаданные.Справочники.Содержит(ОбъектМетаданных) Тогда    
		//	Менеджер = Справочники[Прав(ПолноеИмя, СтрДлина(ПолноеИмя) - Найти(ПолноеИмя, "."))]; 
		//	Возврат Менеджер.ПолучитьСсылку(Новый УникальныйИдентификатор(фУУИД));
		//ИначеЕсли Метаданные.Документы.Содержит(ОбъектМетаданных) Тогда 
		//	Менеджер = Документы[Прав(ПолноеИмя, СтрДлина(ПолноеИмя) - Найти(ПолноеИмя, "."))]; 
		//	Возврат Менеджер.ПолучитьСсылку(Новый УникальныйИдентификатор(фУУИД));
		//ИначеЕсли Метаданные.Перечисления.Содержит(ОбъектМетаданных) Тогда 
		//	Менеджер = Перечисления[Прав(ПолноеИмя, СтрДлина(ПолноеИмя) - Найти(ПолноеИмя, "."))]; 
		//	Возврат Менеджер[фУУИД];
		//ИначеЕсли Метаданные.ПланыСчетов.Содержит(ОбъектМетаданных) Тогда 
		//	Менеджер = ПланыСчетов[Прав(ПолноеИмя, СтрДлина(ПолноеИмя) - Найти(ПолноеИмя, "."))]; 
		//	Возврат Менеджер.ПолучитьСсылку(Новый УникальныйИдентификатор(фУУИД));
		//КонецЕсли;
		
		
		т = ИзXMLТипа(фПолноеИмяТипа,"");
		ОбъектМетаданных = Метаданные.НайтиПоТипу(т);
		ПолноеИмя = ОбъектМетаданных.Имя;
		
		Если Метаданные.Справочники.Содержит(ОбъектМетаданных) Тогда    
			Менеджер = Справочники[ПолноеИмя]; 
			Возврат Менеджер.ПолучитьСсылку(Новый УникальныйИдентификатор(фУУИД));
		ИначеЕсли Метаданные.Документы.Содержит(ОбъектМетаданных) Тогда 
			Менеджер = Документы[ПолноеИмя]; 
			Возврат Менеджер.ПолучитьСсылку(Новый УникальныйИдентификатор(фУУИД));
		ИначеЕсли Метаданные.Перечисления.Содержит(ОбъектМетаданных) Тогда 
			Менеджер = Перечисления[ПолноеИмя]; 
			Возврат Менеджер[фУУИД];
		ИначеЕсли Метаданные.ПланыСчетов.Содержит(ОбъектМетаданных) Тогда 
			Менеджер = ПланыСчетов[ПолноеИмя]; 
			Возврат Менеджер.ПолучитьСсылку(Новый УникальныйИдентификатор(фУУИД));
		КонецЕсли;
		
		Возврат Неопределено;
	Исключение
		Возврат Неопределено;
	КонецПопытки;

	
КонецФункции	


Процедура Инициализировать(Объект, ИмяТабличнойЧасти = Неопределено, ТабличноеПолеОбъекта = Неопределено) Экспорт
	
	
	
	СтандартнаяОбработка = Ложь;
	РежимДиалога =  РежимДиалогаВыбораФайла.Открытие;
	ДиалогВыбораФайла = Новый ДиалогВыбораФайла(РежимДиалога);
	ДиалогВыбораФайла.ПроверятьСуществованиеФайла = Истина;
	ДиалогВыбораФайла.МножественныйВыбор = Ложь;
	ДиалогВыбораФайла.Заголовок = "Задайте имя файла выгрузки ТЧ";
	ДиалогВыбораФайла.Фильтр = "Формат выгрузки(*.xml)|*.xml|Все файлы (*.*)|*.*";
	
	Если ДиалогВыбораФайла.Выбрать() Тогда
		ИмяФайлаОтборов = ДиалогВыбораФайла.ПолноеИмяФайла;
	КонецЕсли;
	
	Объект[ИмяТабличнойЧасти].Очистить();
	ТаблЗнач = Объект[ИмяТабличнойЧасти].Выгрузить();  
	
	Парсер = Новый ЧтениеXML;
    Парсер.ОткрытьФайл(ИмяФайлаОтборов);
	НоваяСтрока = "";
	Пока Парсер.Прочитать() Цикл
		
		Если (Парсер.ТипУзла = ТипУзлаXML.НачалоЭлемента) И (Парсер.Имя = "Row") Тогда
			НоваяСтрока = ТаблЗнач.Добавить();	
			
			Пока Парсер.Прочитать() Цикл
				
				Если (Парсер.ТипУзла = ТипУзлаXML.КонецЭлемента) И (Парсер.Имя = "Row") Тогда
					Прервать;
				КонецЕсли;
				
				Если (Парсер.ТипУзла = ТипУзлаXML.НачалоЭлемента) Тогда
					имяКолонки 		= Парсер.Имя;
					типзначения 	= Парсер.ЗначениеАтрибута("type");	
					значение 		= Парсер.ЗначениеАтрибута("value");
					Если  СтрНайти(типзначения,"Ref")>0 Тогда
						значение 		= ПолучитьСсылкуПоУУИД(типзначения,значение);
					КонецЕсли;
					Попытка
						Если ТаблЗнач.колонки.Найти(имяКолонки) <> Неопределено Тогда
							НоваяСтрока[имяКолонки] = значение;
						КонецЕсли;
					Исключение
						
					КонецПопытки;
					
				КонецЕсли;
				
			КонецЦикла;
		КонецЕсли;
		
	КонецЦикла;
	Парсер.Закрыть();
	
	Объект[ИмяТабличнойЧасти].Загрузить(ТаблЗнач);
	
КонецПроцедуры